(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{562:function(t,e,r){"use strict";r.r(e);var s=r(41),a=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("当你用外部的软件（例如Blender）创建动画时，你通常会有两种主要的定义动画的方式：")]),t._v(" "),e("h2",{attrs:{id:"变形动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变形动画"}},[t._v("#")]),t._v(" 变形动画")]),t._v(" "),e("p",[t._v("通过变形目标，你可以定义网格经过变形之后的版本，或者说关键位置。对于这个变形的目标，其所有顶点位置都会被存储下来。要让图形动起来，你所要做的只是将所有顶点从一个位置，移动到另一个关键位置，并重复该过程。")]),t._v(" "),e("h2",{attrs:{id:"骨骼动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#骨骼动画"}},[t._v("#")]),t._v(" 骨骼动画")]),t._v(" "),e("p",[t._v("另外一种方式就是骨骼动画。通过骨骼动画你可以定义骨骼，即网格的骨头，并把顶点绑定到特定的骨头上。现在，当你移动一块骨头时，任何相连的骨头都会做相应的移动，骨头上绑定的顶点也会随之移动。网格的变形基于骨头的位置、移动和缩放比例。")]),t._v(" "),e("p",[t._v("这两种模式Three.js都支持，不过一般来讲使用变形目标可以得到更好的效果。骨骼动画的主要问题是如何从Blender等三位程序中比较好地导出数据，从而在Three.js中制作动画。用变形目标比用骨骼和皮肤更容易获取一个良好的工作模型。")])])}),[],!1,null,null,null);e.default=a.exports}}]);